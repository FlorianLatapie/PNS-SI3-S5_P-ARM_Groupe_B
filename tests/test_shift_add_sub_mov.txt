Instruction[16] Enable[1] Carry[1] Imm32_Enable[1] Imm5[5] Imm32[32] ALU_Opcode[4] Rm[3] Rn[3] Rd[3] Flags_Update_Mask[4]

1111111111111111 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# 9.1.1.1 LSL (immediate) : Logical Shift Left
# LSL R5, R7 11111
0000011111101111 1 0 0 11111 00000000000000000000000000000000 0010 101 000 111 1110

# 9.1.1.2 LSR (immediate) : Logical Shift Right
# LSR R5, R7 11111
0000111111101111 1 0 0 11111 00000000000000000000000000000000 0011 101 000 111 1110

# 9.1.1.3 ASR : Arithmetic Shift Right
# ASRS R5, R7 11111
0001011111101111 1 0 0 11111 00000000000000000000000000000000 0100 101 000 111 1110

# 9.1.1.4 ADD : Add register
# ADDS R5, R7, R3
0001100011111101 1 0 0 00000 00000000000000000000000000000000 0101 011 111 101 1111

# 9.1.1.5 SUB (register) : Substract register
# SUBS R5, R7, R3
0001101011111101 1 1 0 00000 00000000000000000000000000000000 0110 011 111 101 1111

# 9.1.1.6 ADD (immediate) : Add 3-bit immediate
# ADDS R5, R7, imm3 (011)
0001110011111101 1 0 1 00000 00000000000000000000000000000011 0101 000 111 101 1111

# 9.1.1.7 SUB (immediate) : Sub 3-bit immediate
# SUBS R5, R7, imm3 (011)
0001111011111101 1 1 1 00000 00000000000000000000000000000011 0110 000 111 101 1111

# 9.1.1.8 MOV (immediate) : Move
# MOVS R5, imm8
#------------A VERIFIER------------
#0010010111111111 1 0 1 00000 11111111111111111111111100000001 1001 000 000 101 1100

# 9.1.1.9 CMP (immediate) : Compare
# CMP R5, imm8
0010110111111111 1 0 1 00000 00000000000000000000000011111111 1010 000 000 101 1111

# 9.1.1.10 ADD (immediate) : Add 8-bit immediate
# ADDS R5, imm8
#------------A VERIFIER------------ Rn n'est pas maj Ã  101?
0011010111111111 1 0 1 00000 00000000000000000000000011111111 0101 000 000 101 1111

# 9.1.1.11 SUB (immediate) : SUB 8-bit immediate
# SUBS R5, imm8
#------------A VERIFIER------------ Rn n'est pas maj 101?
0011110111111111 1 1 1 00000 00000000000000000000000011111111 0110 000 000 101 1111



