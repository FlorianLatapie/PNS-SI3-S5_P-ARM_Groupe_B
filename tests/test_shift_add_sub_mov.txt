Instruction[16] Enable[1] Carry[1] Imm32_Enable[1] Imm5[5] Imm32[32] ALU_Opcode[4] Rm[3] Rn[3] Rd[3] Flags_Update_Mask[4]

# instruction    e c i Imm5  Imm32                            Alu_ Rm  Rn  Rd  flag
1111111111111111 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# 9.1.1.1 LSL (immediate) : Logical Shift Left
# LSLS Rd, Rm, #Imm5
# LSLS R5, R7, #11111
# 000 00 imm5  Rm  Rd
# 000 00 11111 111 101
0000011111111101 1 0 0 11111 00000000000000000000000000000000 0010 111 111 101 1110
0000011111111101 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# 9.1.1.2 LSR (immediate) : Logical Shift Right
# LSRS Rd, Rm, #Imm5
# LSRS R5, R7, #11111
# 000 01 Imm5  Rm  Rd
# 000 01 11111 111 101
0000111111111101 1 0 0 11111 00000000000000000000000000000000 0011 111 111 101 1110
0000111111111101 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# 9.1.1.3 ASR : Arithmetic Shift Right
# ASRS Rd, Rm, #Imm5
# ASRS R5, R7, #11111
# 000 10 Imm5  Rm  Rd
# 000 10 11111 111 101
0001011111111101 1 0 0 11111 00000000000000000000000000000000 0100 111 111 101 1110
0001011111111101 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# 9.1.1.4 ADD : Add register
# ADDS Rd, Rn, Rm
# ADDS R5, R7, R3
# 000 11 0 0 Rm  Rn  Rd
# 000 11 0 0 011 111 101
0001100011111101 1 0 0 00000 00000000000000000000000000000000 0101 011 111 101 1111
0001100011111101 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# 9.1.1.5 SUB (register) : Substract register
# SUBS Rd, Rn, Rm
# SUBS R5, R7, R3
# 000 11 0 1 Rm  Rn  Rd
# 000 11 0 1 011 111 101
0001101011111101 1 1 0 00000 00000000000000000000000000000000 0110 011 111 101 1111
0001101011111101 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# 9.1.1.6 ADD (immediate) : Add 3-bit immediate
# ADDS Rd, Rn, #Imm3
# ADDS R5, R7, #011
# 000 11 1 0 Imm3 Rn  Rd
# 000 11 1 0 011  111 101
0001110011111101 1 0 1 00000 00000000000000000000000000000011 0101 000 111 101 1111
0001110011111101 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# ADDS R5, R7, #011
# 000 11 1 0 111  111 101
0001110111111101 1 0 1 00000 00000000000000000000000000000111 0101 000 111 101 1111
0001110111111101 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# 9.1.1.7 SUB (immediate) : Sub 3-bit immediate
# SUBS Rd, Rn, #Imm3
# SUBS R5, R7, #011
# 000 11 1 1 Imm3 Rn  Rd
# 000 11 1 1 011  111 101
0001111011111101 1 1 1 00000 00000000000000000000000000000011 0110 000 111 101 1111
0001111011111101 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# SUBS R5, R7, #011
# 000 11 1 1 111  111 101
0001111111111101 1 1 1 00000 00000000000000000000000000000111 0110 000 111 101 1111
0001111111111101 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# 9.1.1.8 MOV (immediate) : Move
# MOVS Rd, #Imm8
# MOVS R5, 0111111
# 001 00 Rd  Imm8
# 001 00 101 01111111
0010010101111111 1 0 1 00000 11111111111111111111111110000001 1001 000 000 101 1100
0010010101111111 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# MOVS R5, 1111111
# 001 00 101 11111111
0010010111111111 1 0 1 00000 11111111111111111111111100000001 1001 000 000 101 1100
0010010111111111 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# 9.1.1.9 CMP (immediate) : Compare
# CMP Rd, #Imm8
# CMP R5, 01111111
# 001 01 Rd  Imm8
# 001 01 101 01111111
0010110101111111 1 0 1 00000 00000000000000000000000001111111 1010 000 000 101 1111
0010110101111111 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# CMP R5, 11111111
# 001 01 101 11111111
0010110111111111 1 0 1 00000 00000000000000000000000011111111 1010 000 000 101 1111
0010110111111111 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# 9.1.1.10 ADD (immediate) : Add 8-bit immediate
# ADDS Rdn, Rdn, #Imm8
# ADDS R5, #01111111
# 001 10 Rd  Imm8
# 001 10 101 01111111
0011010101111111 1 0 1 00000 00000000000000000000000001111111 0101 000 101 101 1111
0011010101111111 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# ADDS R5, #01111111
# 001 10 Rd  Imm8
# 001 10 101 11111111
0011010111111111 1 0 1 00000 00000000000000000000000011111111 0101 000 101 101 1111
0011010111111111 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# 9.1.1.11 SUB (immediate) : SUB 8-bit immediate
# SUBS Rdn, Rdn, #Imm8
# SUBS R5, 01111111
# 001 11 Rd  Imm8
# 001 11 101 01111111
0011110101111111 1 1 1 00000 00000000000000000000000001111111 0110 000 101 101 1111 
0011110101111111 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# SUBS R5, 01111111
# 001 11 101 11111111
0011110111111111 1 1 1 00000 00000000000000000000000011111111 0110 000 101 101 1111
0011110111111111 0 0 0 00000 00000000000000000000000000000000 0000 000 000 000 0000

# instruction    e c i Imm5  Imm32                            Alu_ Rm  Rn  Rd  flag