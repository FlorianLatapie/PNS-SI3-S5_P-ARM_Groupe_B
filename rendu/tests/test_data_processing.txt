Instruction[16] Enable[1] ALU_Opcode[4] Rm[3] Rn[3] Rd[3] Flags_Update_Mask[4]

#                                              NZCV
# Instruction    Enable ALU_Opcode Rm  Rn  Rd  Flags_Update_Mask
0100000000101111 0      0000       000 000 000 0000
1111111111111111 0      0000       000 000 000 0000

# 9.1.2.1 AND (register) : Bitwise AND (p. 201)
0100000000101111 1      0000       101 111 111 1110
0100000000101111 0      0000       000 000 000 0000

# 9.1.2.2 EOR (register) : Exclusive OR (p. 233)
0100000001101111 1      0001       101 111 111 1110
0100000001101111 0      0000       000 000 000 0000

# 9.1.2.3 LSL (register) : Logical Shift Left (p. 283)
0100000010101111 1      0010       101 111 111 1110
0100000010101111 0      0000       000 000 000 0000

# 9.1.2.4 LSR (register) : Logical Shift Right (p. 285)
0100000011101111 1      0011       101 111 111 1110
0100000011101111 0      0000       000 000 000 0000

# 9.1.2.5 ASR (register) : Arithmetic Shift Right (p. 204)
0100000100101111 1      0100       101 111 111 1110
0100000100101111 0      0000       000 000 000 0000

# 9.1.2.6 ADC (register) : Add with Carry (p. 188)
0100000101101111 1      0101       101 111 111 1111
0100000101101111 0      0000       000 000 000 0000

# 9.1.2.7 SBC (register) : Substract with Carry (p. 347)
0100000110101111 1      0110       101 111 111 1111
0100000110101111 0      0000       000 000 000 0000

# 9.1.2.8 ROR (register) : Rotate Right (p. 339)
0100000111101111 1      0111       101 111 111 1110
0100000111101111 0      0000       000 000 000 0000

# 9.1.2.9 TST (register) : Set flags on bitwise AND (p. 420)
0100001000101111 1      1000       101 111 111 1110
0100001000101111 0      0000       000 000 000 0000

# 9.1.2.10 RSB (immediate) : Reverse Substract from 0 (p. 341)
0100001001101111 1      1001       101 101 111 1111
0100001001101111 0      0000       000 000 000 0000

# 9.1.2.11 CMP (register) : Compare Registers (p. 224)
0100001010101111 1      1010       101 111 111 1111
0100001010101111 0      0000       000 000 000 0000

# 9.1.2.12 CMN (register) : Compare Negative (p. 222)
0100001011101111 1      1011       101 111 111 1111
0100001011101111 0      0000       000 000 000 0000

# 9.1.2.13 ORR (register) : Logical OR (p. 310)
0100001100101111 1      1100       101 111 111 1110
0100001100101111 0      0000       000 000 000 0000

# 9.1.2.14 MUL : Multiply Two Registers (p. 302)
0100001101101111 1      1101       111 101 111 1100
0100001101101111 0      0000       000 000 000 0000

# 9.1.2.15 BIC (register) : Bit Clear (p. 210)
0100001110101111 1      1110       101 111 111 1110
0100001110101111 0      0000       000 000 000 0000

# 9.1.2.16 MVN (register) : Bitwise NOT (p. 304)
0100001111101111 1      1111       101 111 111 1110
0100001111101111 0      0000       000 000 000 0000